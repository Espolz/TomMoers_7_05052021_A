{"ast":null,"code":"var _jsxFileName = \"/Users/tommoers/Documents/code/open-classroom/project-7/TomMoers_7_05052021_A/src/components/Auth/Signin.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState } from 'react';\nimport Button from './Button';\nimport Signup from './Signup'; // ??? Why can\"t I console.log(e) in the return()?\n// ??? Sometimes, I can't type text in my input (in the client) (problem solved, but don't know why)\n// ??? When using my Component react developper tool, I see that my setAuthValues is not updating my AuthValues\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Signin = () => {\n  _s();\n\n  const clikou = () => {\n    console.log('Clickou');\n    console.log();\n  };\n\n  const bioup = () => {\n    console.log('Bioup');\n    console.log();\n  };\n\n  const [authValues, setAuthValues] = useState({\n    firstName: 'T',\n    lastName: 'M',\n    email: '@',\n    password: '1',\n    password2: '2'\n  });\n  console.log(authValues);\n\n  const handleAuthChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    console.log(e);\n    setAuthValues({ ...authValues,\n      // [e.target.name]: e.target.value // the name of the form\n      [name]: value\n    });\n  }; // ??? When I was using this mehod, they where overwritting each other (don't undestand why)\n  // const[email, setEmail] = useState('')\n  // const[password, setPassword] = useState('')\n\n\n  const actionAuth = e => {\n    e.preventDefault();\n\n    if (!authValues.email) {\n      alert('Please add email');\n      return;\n    }\n\n    if (!authValues.password) {\n      alert('Please add password');\n      return;\n    }\n\n    fetch('http://localhost:5000/accounts', {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify(authValues) // ????? Why isn't it working?\n      // setAuthValues.email('')\n      // setAuthValues.password('')\n\n    }); // ????? What are the advantage and how could I use const x = async ...\n    // const postLogger = async (authValues) => {\n    //     const res = await fetch('http://localhost:5000/accounts', {\n    //       method: 'POST',\n    //       headers: {\n    //         'Content-type': 'application/json'\n    //       },\n    //       body: JSON.stringify(authValues)\n    //     })\n    //     // const data = await res.json()\n    //     // setTasks([...tasks, data])\n    // }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth__container-right\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      action: \"\",\n      className: \"auth__form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"auth__inputs\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          className: \"auth__inputs--label\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"email\",\n          type: \"text\",\n          name: \"email\",\n          className: \"form__inputs--input\",\n          placeholder: \"Enter your email\",\n          value: authValues.email // ????? What do you think of it?\n          // onChange={(e) => setAuthValues(e.target.value)}\n          ,\n          onChange: handleAuthChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"auth__inputs\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          className: \"auth__inputs--label\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"password\",\n          type: \"password\",\n          name: \"password\",\n          className: \"auth__inputs--input\",\n          placeholder: \"Enter your password\",\n          value: authValues.password,\n          onChange: handleAuthChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: \"auth__login-btn\",\n        color: \"green\",\n        text: \"Log In\",\n        onClick: actionAuth\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        className: \"auth__forgotten\",\n        href: \"top\",\n        children: \"Forgotten password?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Signup, {\n        className: \"auth__signup-btn\",\n        authValues: authValues\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Signin, \"LaPUkt69UDAJ3Lnvh0Y4dalAksA=\");\n\n_c = Signin;\nexport default Signin;\n\nvar _c;\n\n$RefreshReg$(_c, \"Signin\");","map":{"version":3,"sources":["/Users/tommoers/Documents/code/open-classroom/project-7/TomMoers_7_05052021_A/src/components/Auth/Signin.js"],"names":["React","useState","Button","Signup","Signin","clikou","console","log","bioup","authValues","setAuthValues","firstName","lastName","email","password","password2","handleAuthChange","e","name","value","target","actionAuth","preventDefault","alert","fetch","method","headers","body","JSON","stringify"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { useState } from 'react'\nimport Button from './Button';\nimport Signup from './Signup';\n\n\n// ??? Why can\"t I console.log(e) in the return()?\n// ??? Sometimes, I can't type text in my input (in the client) (problem solved, but don't know why)\n// ??? When using my Component react developper tool, I see that my setAuthValues is not updating my AuthValues\n\nconst Signin = () => {\n    const clikou = () => {\n        console.log('Clickou')\n        console.log()\n    }\n    const bioup = () => {\n        console.log('Bioup')\n        console.log()\n    }\n\n    const[authValues, setAuthValues] = useState({\n        firstName: 'T',\n        lastName: 'M',\n        email: '@',\n        password: '1',\n        password2: '2'\n    });\n\n    console.log(authValues)\n\n    const handleAuthChange = e => {\n        const { name, value } = e.target;\n        console.log(e)\n\n        setAuthValues({\n            ...authValues,\n            // [e.target.name]: e.target.value // the name of the form\n            [name]: value\n        });\n    };\n\n    // ??? When I was using this mehod, they where overwritting each other (don't undestand why)\n    // const[email, setEmail] = useState('')\n    // const[password, setPassword] = useState('')\n\n    const actionAuth = e => {\n        e.preventDefault();\n\n        if(!authValues.email) {\n            alert('Please add email')\n            return\n        }\n\n        if(!authValues.password) {\n            alert('Please add password')\n            return\n        }\n\n\n        fetch('http://localhost:5000/accounts', {\n            method: 'POST',\n            headers: {\n            'Content-type': 'application/json'\n            },\n            body: JSON.stringify(authValues)\n\n            // ????? Why isn't it working?\n            // setAuthValues.email('')\n            // setAuthValues.password('')\n\n            \n\n        })\n    \n\n        \n        // ????? What are the advantage and how could I use const x = async ...\n        // const postLogger = async (authValues) => {\n        //     const res = await fetch('http://localhost:5000/accounts', {\n        //       method: 'POST',\n        //       headers: {\n        //         'Content-type': 'application/json'\n        //       },\n        //       body: JSON.stringify(authValues)\n        //     })\n        \n        //     // const data = await res.json()\n        \n        //     // setTasks([...tasks, data])\n        // }\n    \n        \n\n    }\n\n    return (\n        <div className=\"auth__container-right\">\n            <form action=\"\" className=\"auth__form\">\n            {/* <form action=\"\" className=\"auth__form\" onSubmit={actionAuth} > */}\n                <div className=\"auth__inputs\">\n                    <label htmlFor=\"email\" className=\"auth__inputs--label\">\n                        Email\n                    </label>\n                    <input \n                        id='email' \n                        type=\"text\" \n                        name=\"email\" \n                        className=\"form__inputs--input\" \n                        placeholder=\"Enter your email\"\n                        value= {authValues.email}\n                        // ????? What do you think of it?\n                        // onChange={(e) => setAuthValues(e.target.value)}\n                        onChange={handleAuthChange}\n                    />\n                    {/* {errors.email && <p>{errors.email}</p>} */}\n                    \n                </div>\n                <div className=\"auth__inputs\">\n                    <label htmlFor=\"password\" className=\"auth__inputs--label\">\n                        Password\n                    </label>\n                    <input \n                        id='password'  \n                        type=\"password\" \n                        name=\"password\" \n                        className=\"auth__inputs--input\" \n                        placeholder=\"Enter your password\"\n                        value= {authValues.password}\n                        onChange={handleAuthChange}\n                    />\n                    {/* {errors.email && <p>{errors.email}</p>} */}\n                </div>\n\n                \n\n                <Button className=\"auth__login-btn\" color='green' text='Log In' onClick={actionAuth} />\n                <a className=\"auth__forgotten\" href='top'>Forgotten password?</a>\n\n                <Signup className=\"auth__signup-btn\" authValues={authValues} />\n                \n            </form>\n            \n            \n        </div>\n        \n    )\n}\n\n\nexport default Signin\n"]},"metadata":{},"sourceType":"module"}
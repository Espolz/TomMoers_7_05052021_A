{"ast":null,"code":"var _jsxFileName = \"/Users/tommoers/Documents/code/open-classroom/project-7/p7-react/src/components/Auth/Signin.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState } from 'react';\nimport Button from './Button';\nimport { Modal } from '@material-ui/core'; // ??? I want to console.log e, e.target in the return function to understand what it is, be I can\"t.\n// ??? Sometimes, I can't type text in my input (in the client) (problem solved, but don't know why)\n// ??? When using my Component react developper tool, I see that my setAuthValues is not updating my AuthValues\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Signin = () => {\n  _s();\n\n  const clikou = () => {\n    console.log('Clickou');\n    console.log();\n  };\n\n  const bioup = () => {\n    console.log('Bioup');\n    console.log();\n  };\n\n  const [authValues, setAuthValues] = useState({\n    email: '',\n    password: ''\n  });\n\n  const handleAuthChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setAuthValues({ ...authValues,\n      // [e.target.name]: e.target.value // the name of the form\n      [name]: value\n    });\n  }; // const[email, setEmail] = useState('')\n  // const[password, setPassword] = useState('')\n  // Add Task\n  // const addTask = () => {\n  //     console.log('hello')\n  // }\n\n\n  const actionAuth = e => {\n    e.preventDefault();\n\n    if (!authValues.email) {\n      alert('Please add email');\n      return;\n    }\n\n    if (!authValues.password) {\n      alert('Please add password');\n      return;\n    }\n\n    console.log(authValues);\n    fetch('http://localhost:5000/accounts', {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify(authValues)\n    }); // const data = await res.json()\n    // setTasks([...tasks, data])\n    // const postLogger = async (authValues) => {\n    //     const res = await fetch('http://localhost:5000/accounts', {\n    //       method: 'POST',\n    //       headers: {\n    //         'Content-type': 'application/json'\n    //       },\n    //       body: JSON.stringify(authValues)\n    //     })\n    //     // const data = await res.json()\n    //     // setTasks([...tasks, data])\n    // }\n  }; // const postLogger = async (newLogger) => {\n  //     const res = await fetch('http://localhost:5000/accounts', {\n  //       method: 'POST',\n  //       headers: {\n  //         'Content-type': 'application/json'\n  //       },\n  //       body: JSON.stringify(task)\n  //     })\n  //     const data = await res.json()\n  //     setTasks([...tasks, data])\n  //     -----\n  //     // const id = Math.floor(Math.random() * 1000) +1\n  //     // const newTask = { id, ...task }\n  //     // setTasks([...tasks, newTask])\n  //   }\n  // onAdd({ email, day })\n  // setEmail('')\n  // setPassword('')\n  // const handleAuthChange = e => {\n  //     setAuthValues({ ...authValues, [e.target.name]: e.target.authValues })\n  // }\n  // const handleSubmit = e => {\n  //     e.preventDefault();\n  // }\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth__container-right\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      action: \"\",\n      className: \"auth__form\",\n      onSubmit: actionAuth,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"auth__inputs\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          className: \"auth__inputs--label\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"email\",\n          type: \"text\",\n          name: \"email\",\n          className: \"form__inputs--input\",\n          placeholder: \"Enter your email\" // value={email}\n          // onChange={(e) => setEmail(e.target.value)}\n          ,\n          value: authValues.email // onChange={(e) => setAuthValues(e.target.value)}\n          ,\n          onChange: handleAuthChange // value={values.email}\n          // onChange={handleChange}\n\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"auth__inputs\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          className: \"auth__inputs--label\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"password\",\n          type: \"password\",\n          name: \"password\",\n          className: \"auth__inputs--input\",\n          placeholder: \"Enter your password\" // value={password}\n          // onChange={(e) => setPassword(e.target.value)}\n          ,\n          value: authValues.password // onChange={(e) => setAuthValues(e.target.value)}\n          // value={authValues.password}\n          ,\n          onChange: handleAuthChange // value={values.email}\n          // onChange={handleChange}\n\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: \"auth__login-btn\",\n        color: \"green\",\n        text: \"Log In\",\n        onClick: clikou\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        className: \"auth__forgotten\",\n        href: \"top\",\n        children: \"Forgotten password?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: \"auth__signup-btn\",\n        color: \"blue\",\n        text: \"Create New Account\",\n        onClick: bioup\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"btn btn-block\",\n        type: \"submit\",\n        value: \"Save Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handleOpen,\n        children: \"Open Modal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        open: open,\n        onClose: handleClose,\n        \"aria-labelledby\": \"simple-modal-title\",\n        \"aria-describedby\": \"simple-modal-description\",\n        children: body\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Signin, \"yKYNMKFwV8r9Iz+g+X2jT1TH4fc=\");\n\n_c = Signin;\nexport default Signin;\n\nvar _c;\n\n$RefreshReg$(_c, \"Signin\");","map":{"version":3,"sources":["/Users/tommoers/Documents/code/open-classroom/project-7/p7-react/src/components/Auth/Signin.js"],"names":["React","useState","Button","Modal","Signin","clikou","console","log","bioup","authValues","setAuthValues","email","password","handleAuthChange","e","name","value","target","actionAuth","preventDefault","alert","fetch","method","headers","body","JSON","stringify","handleOpen","open","handleClose"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { useState } from 'react'\nimport Button from './Button';\nimport { Modal } from '@material-ui/core';\n\n// ??? I want to console.log e, e.target in the return function to understand what it is, be I can\"t.\n// ??? Sometimes, I can't type text in my input (in the client) (problem solved, but don't know why)\n// ??? When using my Component react developper tool, I see that my setAuthValues is not updating my AuthValues\n\nconst Signin = () => {\n    const clikou = () => {\n        console.log('Clickou')\n        console.log()\n    }\n    const bioup = () => {\n        console.log('Bioup')\n        console.log()\n    }\n\n    const[authValues, setAuthValues] = useState({\n        email: '',\n        password: ''\n    });\n\n    const handleAuthChange = e => {\n        const { name, value } = e.target;\n\n        setAuthValues({\n            ...authValues,\n            // [e.target.name]: e.target.value // the name of the form\n            [name]: value\n        });\n    };\n\n    // const[email, setEmail] = useState('')\n    // const[password, setPassword] = useState('')\n\n    // Add Task\n    // const addTask = () => {\n    //     console.log('hello')\n    // }\n\n    const actionAuth = e => {\n        e.preventDefault();\n\n        if(!authValues.email) {\n            alert('Please add email')\n            return\n        }\n\n        if(!authValues.password) {\n            alert('Please add password')\n            return\n        }\n\n        console.log(authValues)\n\n        fetch('http://localhost:5000/accounts', {\n            method: 'POST',\n            headers: {\n            'Content-type': 'application/json'\n            },\n            body: JSON.stringify(authValues)\n        })\n    \n            // const data = await res.json()\n        \n            // setTasks([...tasks, data])\n        \n\n        // const postLogger = async (authValues) => {\n        //     const res = await fetch('http://localhost:5000/accounts', {\n        //       method: 'POST',\n        //       headers: {\n        //         'Content-type': 'application/json'\n        //       },\n        //       body: JSON.stringify(authValues)\n        //     })\n        \n        //     // const data = await res.json()\n        \n        //     // setTasks([...tasks, data])\n        // }\n    \n        \n\n    }\n\n    // const postLogger = async (newLogger) => {\n    //     const res = await fetch('http://localhost:5000/accounts', {\n    //       method: 'POST',\n    //       headers: {\n    //         'Content-type': 'application/json'\n    //       },\n    //       body: JSON.stringify(task)\n    //     })\n    \n    //     const data = await res.json()\n    \n    //     setTasks([...tasks, data])\n    //     -----\n    //     // const id = Math.floor(Math.random() * 1000) +1\n    \n    //     // const newTask = { id, ...task }\n    //     // setTasks([...tasks, newTask])\n    //   }\n\n        \n\n        // onAdd({ email, day })\n        // setEmail('')\n        // setPassword('')\n\n        \n    \n\n    // const handleAuthChange = e => {\n    //     setAuthValues({ ...authValues, [e.target.name]: e.target.authValues })\n    // }\n    \n    // const handleSubmit = e => {\n    //     e.preventDefault();\n        \n    // }\n\n\n\n    return (\n        <div className=\"auth__container-right\">\n            <form action=\"\" className=\"auth__form\" onSubmit={actionAuth} >\n                <div className=\"auth__inputs\">\n                    <label htmlFor=\"email\" className=\"auth__inputs--label\">\n                        Email\n                    </label>\n                    <input \n                        id='email' \n                        type=\"text\" \n                        name=\"email\" \n                        className=\"form__inputs--input\" \n                        placeholder=\"Enter your email\"\n                        // value={email}\n                        // onChange={(e) => setEmail(e.target.value)}\n                        value= {authValues.email}\n                        // onChange={(e) => setAuthValues(e.target.value)}\n                        onChange={handleAuthChange}\n                        // value={values.email}\n                        // onChange={handleChange}\n                    />\n                    {/* {errors.email && <p>{errors.email}</p>} */}\n                    \n                </div>\n                <div className=\"auth__inputs\">\n                    <label htmlFor=\"password\" className=\"auth__inputs--label\">\n                        Password\n                    </label>\n                    <input \n                        id='password'  \n                        type=\"password\" \n                        name=\"password\" \n                        className=\"auth__inputs--input\" \n                        placeholder=\"Enter your password\"\n                        // value={password}\n                        // onChange={(e) => setPassword(e.target.value)}\n                        value= {authValues.password}\n                        // onChange={(e) => setAuthValues(e.target.value)}\n                        // value={authValues.password}\n                        onChange={handleAuthChange}\n                        // value={values.email}\n                        // onChange={handleChange}\n                    />\n                    {/* {errors.email && <p>{errors.email}</p>} */}\n                </div>\n\n                \n\n                <Button className=\"auth__login-btn\" color='green' text='Log In' onClick={clikou} />\n                <a className=\"auth__forgotten\" href='top'>Forgotten password?</a>\n                <Button className=\"auth__signup-btn\" color='blue' text='Create New Account' onClick={bioup} />\n                <input className='btn btn-block' type='submit' value='Save Task' />\n            \n                <button type=\"button\" onClick={handleOpen}>\n                Open Modal\n                </button>\n                <Modal\n                open={open}\n                onClose={handleClose}\n                aria-labelledby=\"simple-modal-title\"\n                aria-describedby=\"simple-modal-description\"\n                >\n                {body}\n                </Modal>\n                \n            </form>\n            \n            \n        </div>\n        \n    )\n}\n\n\nexport default Signin\n"]},"metadata":{},"sourceType":"module"}
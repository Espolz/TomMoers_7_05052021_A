{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\n\nconst useForm = (callback, validate) => {\n  _s();\n\n  const [values, setValues] = useState({\n    username: '',\n    email: '',\n    password: '',\n    password2: ''\n  });\n  const [errors, setErrors] = useState({});\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setValues({ ...values,\n      // [e.target.name]: e.target.value // the name of the form\n      [name]: value\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setErrors(validate(values));\n    setIsSubmitting(true);\n  };\n\n  useEffect(() => {\n    if (Object.keys(errors).length === 0 && isSubmitting) {\n      callback();\n    }\n  }, [errors]);\n  return {\n    handleChange,\n    values,\n    handleSubmit,\n    errors\n  };\n};\n\n_s(useForm, \"u9fFLkvflibkngzh1NgeOSTl9Z0=\");\n\nexport default useForm;","map":{"version":3,"sources":["/Users/tommoers/Documents/code/open-classroom/project-7/p7-react/src/components/Form/useForm.js"],"names":["useState","useEffect","useForm","callback","validate","values","setValues","username","email","password","password2","errors","setErrors","isSubmitting","setIsSubmitting","handleChange","e","name","value","target","handleSubmit","preventDefault","Object","keys","length"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAEA,MAAMC,OAAO,GAAG,CAACC,QAAD,EAAWC,QAAX,KAAwB;AAAA;;AACtC,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC;AACnCO,IAAAA,QAAQ,EAAE,EADyB;AAEnCC,IAAAA,KAAK,EAAE,EAF4B;AAGnCC,IAAAA,QAAQ,EAAE,EAHyB;AAInCC,IAAAA,SAAS,EAAE;AAJwB,GAAD,CAApC;AASE,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBZ,QAAQ,CAAC,EAAD,CAApC;AACA,QAAK,CAACa,YAAD,EAAeC,eAAf,IAAkCd,QAAQ,CAAC,KAAD,CAA/C;;AAEA,QAAMe,YAAY,GAAGC,CAAC,IAAI;AACtB,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAkBF,CAAC,CAACG,MAA1B;AAEAb,IAAAA,SAAS,CAAC,EACN,GAAGD,MADG;AAEN;AACA,OAACY,IAAD,GAAQC;AAHF,KAAD,CAAT;AAKH,GARD;;AAUA,QAAME,YAAY,GAAGJ,CAAC,IAAI;AACtBA,IAAAA,CAAC,CAACK,cAAF;AAEAT,IAAAA,SAAS,CAACR,QAAQ,CAACC,MAAD,CAAT,CAAT;AACAS,IAAAA,eAAe,CAAC,IAAD,CAAf;AAEH,GAND;;AAQAb,EAAAA,SAAS,CACL,MAAM;AACJ,QAAIqB,MAAM,CAACC,IAAP,CAAYZ,MAAZ,EAAoBa,MAApB,KAA+B,CAA/B,IAAoCX,YAAxC,EAAsD;AACpDV,MAAAA,QAAQ;AACT;AACF,GALI,EAML,CAACQ,MAAD,CANK,CAAT;AASA,SAAO;AAACI,IAAAA,YAAD;AAAeV,IAAAA,MAAf;AAAuBe,IAAAA,YAAvB;AAAqCT,IAAAA;AAArC,GAAP;AACH,CAzCD;;GAAMT,O;;AA2CN,eAAeA,OAAf","sourcesContent":["import { useState, useEffect } from 'react';\n\nconst useForm = (callback, validate) => {\n  const [values, setValues] = useState({\n    username: '',\n    email: '',\n    password: '',\n    password2: ''\n  });\n\n\n\n    const [errors, setErrors] = useState({})\n    const[isSubmitting, setIsSubmitting] = useState(false)\n\n    const handleChange = e => {\n        const { name, value } = e.target;\n\n        setValues({\n            ...values,\n            // [e.target.name]: e.target.value // the name of the form\n            [name]: value\n        });\n    };\n\n    const handleSubmit = e => {\n        e.preventDefault();\n\n        setErrors(validate(values));\n        setIsSubmitting(true)\n        \n    };\n\n    useEffect(\n        () => {\n          if (Object.keys(errors).length === 0 && isSubmitting) {\n            callback();\n          }\n        },\n        [errors]\n      );\n\n    return {handleChange, values, handleSubmit, errors};\n}\n\nexport default useForm;"]},"metadata":{},"sourceType":"module"}